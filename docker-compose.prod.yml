version: '3.8'

services:
  ocr-backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: ocr-backend:prod
    container_name: ocr-backend-prod
    ports:
      - "8000:80"
    environment:
      # API Security
      - API_KEY=${API_KEY:-your-secure-api-key-here}
      
      # Enable only marker service for production
      - ENABLED_SERVICES=marker
      
      # Worker configuration - 4 workers for marker
      - WORKERS=4
      - WORKER_CLASS=uvicorn.workers.UvicornWorker
      - WORKER_CONNECTIONS=1000
      
      # Performance tuning
      - MAX_REQUESTS=1000
      - MAX_REQUESTS_JITTER=50
      - TIMEOUT=120
      - GRACEFUL_TIMEOUT=30
      - KEEPALIVE=5
      
      # Logging
      - LOG_LEVEL=info
      - ACCESS_LOG=true
      
      # Server configuration
      - HOST=0.0.0.0
      - PORT=80
      
      # GPU support (if available)
      - CUDA_VISIBLE_DEVICES=0
      
    volumes:
      # Mount for temporary files if needed
      - ./temp:/tmp
      
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "-H", "x-api-key: ${API_KEY:-your-secure-api-key-here}", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Nginx reverse proxy for load balancing multiple instances
  nginx:
    image: nginx:alpine
    container_name: ocr-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - ocr-backend
    restart: unless-stopped
    profiles:
      - with-nginx

networks:
  default:
    name: ocr-network-prod
    driver: bridge